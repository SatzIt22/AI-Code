{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 using UnityEngine;\
\
public class FallDetector : MonoBehaviour\
\{\
    public LivesManager livesManager; // a reference to the lives manager script\
    public float replayDuration = 5f; // the duration of the replay in seconds\
    public GameObject replayCamera; // the camera to use for the replay\
    public GameObject player; // the player object\
    public Transform respawnPoint; // the point where the player will respawn\
\
    private bool isFalling = false; // whether the player is falling\
    private float fallStartTime; // the time when the player started falling\
    private bool isReplaying = false; // whether the replay is currently playing\
    private float replayStartTime; // the time when the replay started\
\
    private void Update()\
    \{\
        if (isFalling && !isReplaying)\
        \{\
            if (livesManager.infiniteTries || livesManager.currentLives > 1)\
            \{\
                // if the player has infinite tries or more than 1 life left, start the replay\
                isReplaying = true;\
                replayStartTime = Time.time;\
                replayCamera.SetActive(true);\
                player.SetActive(false);\
            \}\
            else\
            \{\
                // if the player has no lives left, go to the game over scene\
                UnityEngine.SceneManagement.SceneManager.LoadScene("GameOverScene");\
            \}\
        \}\
\
        if (isReplaying)\
        \{\
            // if the replay is playing, check if the player wants to skip it\
            if (Input.GetKeyDown(KeyCode.Space))\
            \{\
                // if the player wants to skip the replay, stop the replay and respawn the player\
                isReplaying = false;\
                replayCamera.SetActive(false);\
                player.SetActive(true);\
                livesManager.DecreaseLives();\
                player.transform.position = respawnPoint.position;\
            \}\
            else if (Time.time - replayStartTime > replayDuration)\
            \{\
                // if the replay has finished playing, stop the replay and respawn the player\
                isReplaying = false;\
                replayCamera.SetActive(false);\
                player.SetActive(true);\
                livesManager.DecreaseLives();\
                player.transform.position = respawnPoint.position;\
            \}\
        \}\
    \}\
\
    private void OnTriggerEnter(Collider other)\
    \{\
        if (other.CompareTag("Player"))\
        \{\
            // if the player falls off, start falling\
            isFalling = true;\
            fallStartTime = Time.time;\
        \}\
    \}\
\
    private void OnTriggerExit(Collider other)\
    \{\
        if (other.CompareTag("Player"))\
        \{\
            // if the player stops falling, stop falling\
            isFalling = false;\
        \}\
    \}\
\}\
}