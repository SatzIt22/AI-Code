{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 using UnityEngine;\
using UnityEngine.UI;\
using UnityEngine.SceneManagement;\
\
public class MainMenu : MonoBehaviour\
\{\
    public GameObject mainMenuPanel;\
    public GameObject mainGamePanel;\
    public GameObject arcadeModePanel;\
    public GameObject arcadeLevelSelect;\
    public GameObject arcadeSettings;\
    public GameObject bossRushPanel;\
    public GameObject miniGamesPanel;\
    public GameObject miniGame1Menu;\
    public GameObject miniGame2Menu;\
    public GameObject optionsPanel;\
    public Button backButton;\
    public GameObject characterSelectionCanvas;\
\
    public AudioClip mainMenuMusic; // drag and drop the main menu music track in the inspector\
    public AudioClip miniGameMenuMusic1;\
    public AudioClip miniGameMenuMusic2;\
    public AudioClip bossRushMenuMusic;\
    private AudioSource audioSource;\
    private GameObject currentPanel;\
    private GameObject prevPanel;\
\
    private void Start()\
    \{\
    //call script for traversing menus with controller\
    audioSource = GetComponent<AudioSource>();\
    if (PlayerPrefs.HasKey("PreviousScene"))\
        \{\
            string previousScene = PlayerPrefs.GetString("PreviousScene");\
\
            switch (previousScene)\
            \{\
                case \'93MainGame\'94:\
                    currentPanel = mainGamePanel;\
                    prevPanel = mainMenuPanel;\
                    audioSource.clip = mainMenuMusic;\
                    backButton.gameObject.SetActive(true);\
                    break;\
                case \'93MiniGame1\'94:\
                    currentPanel = miniGame1Menu;\
                    prevPanel = miniGamesPanel;\
                    audioSource.clip = miniGameMenuMusic1;\
                    backButton.gameObject.SetActive(true);\
                    break;\
                case "MiniGame2\'94:\
                    currentPanel = miniGame2Menu;\
                    prevPanel = miniGamesPanel;\
                    audioSource.clip = miniGameMenuMusic2;\
                    backButton.gameObject.SetActive(true);\
                    break;\
                case "Options":\
                    currentPanel = optionsPanel;\
                    prevPanel = mainMenuPanel;\
                    audioSource.clip = mainMenuMusic;\
                    backButton.gameObject.SetActive(true);\
                    break;\
                case "BossRush":\
                    currentPanel = bossRushPanel;\
                    prevPanel = mainGamePanel;\
                    audioSource.clip = bossRushMenuMusic;\
                    backButton.gameObject.SetActive(true);\
                    break;\
                default:\
                    currentPanel = mainMenuPanel;\
                    prevPanel = mainMenuPanel;\
                    audioSource.clip = mainMenuMusic;\
                    backButton.gameObject.SetActive(false);\
                    break;\
            \}\
\
            previousPanel.SetActive(false);\
            currentPanel.SetActive(true);\
        \}\
        else\
        \{\
            currentPanel = mainMenuPanel;\
            currentPanel.SetActive(true);\
            prevPanel = mainMenuPanel;\
            prevPanel.SetActive(false);\
            audioSource.clip = mainMenuMusic;\
            backButton.gameObject.SetActive(false);\
        \}\
        audioSource.Play();\
\
       // characterSelectionCanvas.SetActive(false);\
       // currentPanel = mainMenuPanel;\
       // currentPanel.SetActive(true);\
       // miniGamesPanel.SetActive(false);\
       // optionsPanel.SetActive(false);\
       // miniGame1Menu.SetActive(false);\
       // miniGame2Menu.SetActive(false);\
       // mainGamePanel.SetActive(false);\
       // arcadeModePanel.SetActive(false);\
       // arcadeLevelSelect.SetActive(false);\
       // arcadeSettings.SetActive(false);\
       // backButton.gameObject.SetActive(false);\
\
    \}\
\
    public void MainGame()\
    \{\
        currentPanel.SetActive(false);\
        currentPanel = mainGamePanel;\
        prevPanel = mainMenuPanel;\
        currentPanel.SetActive(true);\
        backButton.gameObject.SetActive(true);\
    \}\
\
    public void ArcadeMode()\
    \{\
        //ask for multiplayer\
        currentPanel.SetActive(false);\
        currentPanel = arcadeModePanel;\
        prevPanel = mainGamePanel;\
        currentPanel.SetActive(true);\
    \}\
\
    public void ArcadeLevelSelect()\
    \{\
        characterSelector();\
        currentPanel.SetActive(false);\
        currentPanel = arcadeLevelSelect; \
        prevPanel = arcadeModePanel;\
        currentPanel.SetActive(true);\
    \}\
\
    public void ArcadeSettings()\
    \{\
        currentPanel.SetActive(false);\
        currentPanel = arcadeSettings;\
        prevPanel = arcadeLevelSelect;\
        currentPanel.SetActive(true);\
        //after exiting the settings by confirming, run ArcadeLevelSelect(), else run Back()\
            //confirming is the only way to save settings\
    \}\
\
    public void ShowMiniGames()\
    \{\
        currentPanel.SetActive(false);\
        currentPanel = miniGamesPanel;\
        prevPanel = mainMenuPanel;\
        currentPanel.SetActive(true);\
        backButton.gameObject.SetActive(true);\
    \}\
\
    public void ShowMini1()\
    \{\
        //ask for multiplayer\
        currentPanel.SetActive(false);\
        currentPanel = miniGame1Menu;\
        prevPanel = miniGamesPanel;\
        currentPanel.SetActive(true);\
        audioSource.Stop();\
        audioSource.clip = miniGameMenuMusic2;\
        audioSource.Play();\
        //characterSelector();\
    \}\
\
    public void ShowMini2()\
    \{\
        //ask for multiplayer\
        currentPanel.SetActive(false);\
        currentPanel = miniGame2Menu;\
        prevPanel = miniGamesPanel;\
        currentPanel.SetActive(true);\
        audioSource.Stop();\
        audioSource.clip = miniGameMenuMusic2;\
        audioSource.Play();\
        //characterSelector();\
    \}\
\
    public void ShowOptions()\
    \{\
        currentPanel.SetActive(false);\
        currentPanel = optionsPanel;\
        prevPanel = mainMenuPanel;\
        currentPanel.SetActive(true);\
        backButton.gameObject.SetActive(true);\
    \}\
\
    public void characterSelector()\
    \{\
        currentPanel.SetActive(false);\
        characterSelectionCanvas.SetActive(true);\
        //run character selection\
        characterSelectionCanvas.SetActive(false);\
        //if BACK is selected, currentPanel.SetActive(true) and exit this function\
    \}\
\
    public void Back()\
    \{\
        if(characterSelectionCanvas.SetActive(true))\{\
            characterSelectionCanvas.SetActive(false);\
            currentPanel.SetActive(true);\} //prevPanel isn\'92t changed by character selection screen\
        else\{\
            currentPanel.SetActive(false);\
            if(prevPanel == mainMenuPanel)\{\
                if(currentPanel == mainMenuPanel)\{ ExitGame(); \}\
                currentPanel = mainMenuPanel;\
                currentPanel.SetActive(true);\
                backButton.gameObject.SetActive(false);\}\
            else\{\
                currentPanel = prevPanel;\
		//make prevPanel the parent menu of currentPanel\
                //prevPanel = ?;\
                currentPanel.SetActive(true);\
                \}\
            if(audioSource != mainMenuMusic)\{\
                audioSource.Stop();\
                audioSource.clip = mainMenuMusic;\
                audioSource.Play();\
                \}\
        \}\
    \}\
\
    Public void StartStoryMode()\
    \{\
        SceneManager.LoadScene(\'93StoryMenuScene\'94);\
    \}\
\
    public void StartMainGame()\
    \{\
        SceneManager.LoadScene("MainGameScene");\
    \}\
\
    public void UseArcadeSave()\
    \{\
        //call save point data\
        SceneManager.LoadScene(\'93SavePointScene\'94);\
    \}\
\
    public void PracticeMode()\
    \{\
        characterSelector();\
        //if BACK is selected, go to Arcade Mode menu, else load the practice mode scene\
        SceneManager.LoadScene(\'93PracticeModeScene\'94);\
    \}\
\
    public void StartMiniGame1()\
    \{\
        SceneManager.LoadScene("MiniGame1Scene");\
    \}\
\
    public void StartMiniGame2()\
    \{\
        SceneManager.LoadScene("MiniGame2Scene");\
    \}\
\
    // Add more mini-game start methods as needed\
\
    public void StartShop()\
    \{\
        SceneManager.LoadScene(\'93ShopScene\'94);\
    \}\
\
    public void checkRankings()\
    \{\
        SceneManager.LoadScene(\'93RankingsScene\'94);\
    \}\
\
    public void SetPreviousScene(string sceneName) //don\'92t destroy on load so it persists between scenes\
    \{\
        PlayerPrefs.SetString("PreviousScene", sceneName);\
    \}\
\
    public void ExitGame()\
    \{\
        SceneManager.LoadScene(\'93TitleScreenScene\'94);\
    \}\
\}\
}