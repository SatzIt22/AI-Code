{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 using System;\
using UnityEngine;\
using System.Collections.Generic;\
\
public class GameManager : MonoBehaviour\
\{\
    // Create a class to represent achievements\
    [Serializable]\
    public class Achievement\
    \{\
        public string name;\
        public string description;\
        public int criteria;\
        public bool isUnlocked;\
    \}\
\
    // List of achievements\
    public List<Achievement> achievements;\
\
    // Example UI for displaying achievements (you'd create your own UI)\
    public UnityEngine.UI.Text achievementText;\
\
    // Example event for when a player collects something\
    public event Action<int> OnCollect;\
\
    // Example event for when an achievement is unlocked\
    public event Action<string> OnAchievementUnlocked;\
\
    private void Start()\
    \{\
        // Initialize achievements (load from save data if needed)\
        InitializeAchievements();\
\
        // Example: Subscribe to the OnCollect event\
        OnCollect += CheckAchievements;\
    \}\
\
    private void Update()\
    \{\
        // Example: Simulate a collectible item being collected\
        if (Input.GetKeyDown(KeyCode.C))\
        \{\
            // Notify that the player collected something\
            OnCollect?.Invoke(1);\
        \}\
    \}\
\
    // Initialize achievements (usually load from saved data)\
    private void InitializeAchievements()\
    \{\
        foreach (var achievement in achievements)\
        \{\
            achievement.isUnlocked = false;\
        \}\
    \}\
\
    // Check if achievements are unlocked\
    private void CheckAchievements(int collectedAmount)\
    \{\
        foreach (var achievement in achievements)\
        \{\
            if (!achievement.isUnlocked && collectedAmount >= achievement.criteria)\
            \{\
                UnlockAchievement(achievement);\
            \}\
        \}\
    \}\
\
    // Unlock an achievement\
    private void UnlockAchievement(Achievement achievement)\
    \{\
        achievement.isUnlocked = true;\
        Debug.Log("Achievement Unlocked: " + achievement.name);\
\
        // Notify UI or show a message to the player\
        achievementText.text = "Achievement Unlocked: " + achievement.name;\
\
        // Example: Trigger an event when an achievement is unlocked\
        OnAchievementUnlocked?.Invoke(achievement.name);\
    \}\
\}\
}